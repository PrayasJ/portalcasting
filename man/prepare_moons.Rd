% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepare_moons.R
\name{prepare_moons}
\alias{prepare_moons}
\alias{prep_moons}
\alias{format_moons}
\alias{add_future_moons}
\alias{add_extra_future_moons}
\title{Prepare lunar data for the portalcasting repository}
\usage{
prep_moons(main = ".", lead_time = 12, cast_date = Sys.Date(),
  raw_data = "PortalData", quiet = TRUE, save = TRUE,
  verbose = FALSE, overwrite = TRUE,
  filename_moons = "moon_dates.csv", arg_checks = TRUE)

format_moons(moons, arg_checks = TRUE)

add_future_moons(moons = NULL, lead_time = 12,
  cast_date = Sys.Date(), arg_checks = TRUE)

add_extra_future_moons(moons, cast_date = Sys.Date(),
  arg_checks = TRUE)
}
\arguments{
\item{main}{\code{character} value of the name of the main component of
the directory tree.}

\item{lead_time}{\code{integer} (or integer \code{numeric}) value for the
number of timesteps forward a cast will cover.}

\item{cast_date}{\code{Date} from which future is defined, typically 
today's date (set using \code{\link{Sys.Date}}).}

\item{quiet}{\code{logical} indicator controlling if messages are printed.}

\item{save}{\code{logical} indicator controlling if the output should 
be saved out.}

\item{verbose}{\code{logical} indicator of whether or not to print out
all of the information or not (and thus just the tidy messages).}

\item{overwrite}{\code{logical} indicator of whether or not the existing
files should be updated (most users should leave as \code{TRUE}).}

\item{filename_moons}{\code{character} name of the file for saving the 
data output.}

\item{arg_checks}{\code{logical} value of if the arguments should be
checked using standard protocols via \code{\link{check_args}}. The 
default (\code{arg_checks = TRUE}) ensures that all inputs are 
formatted correctly and provides directed error messages if not. \cr
However, in sandboxing, it is often desirable to be able to deviate from 
strict argument expectations. Setting \code{arg_checks = FALSE} triggers
many/most/all enclosed functions to not check any arguments using 
\code{\link{check_args}}, and as such, \emph{caveat emptor}.}

\item{moons}{Moons \code{data.frame}.}
}
\value{
All functions here return some version of a moons \code{data.frame}
 \cr \cr. 
 \code{prep_moons}, \code{format_moons}: fully appended and formatted 
 \code{data.frame} (also saved out if \code{save = TRUE}). \cr \cr
 \code{add_future_moons} and \code{add_extra_future_moons}: appropriately 
 appended moons
 \code{data.frame}.
}
\description{
A set of functions that get time information (calendar dates, 
 census periods, and newmoon numbers) associated with trapping events 
 (achieved and missed) based on a lunar survey schedule. If needed, 
 additional moons will be added to both the in-use and raw versions of 
 the data table. \cr \cr
 \code{add_future_moons} adds future moon dates to the moon table, counting 
 forward from \code{cast_date}. Because the \code{moons} table might not 
 have the most recent moons, more rows than \code{lead_time} may need to 
 be added to the table. \cr \cr. \cr \cr
 \code{add_extra_future_moons} adds more more moons to accomplish required
 data for \code{lead_time}. Because the moon table might not have the most 
 recent moons, more rows than initially requested may need to be added to 
 the table for it to cover \code{lead_time} .\cr \cr
 \code{format_moons} formats the final output table with \code{year} and
 \code{month} columns formatted accordingly, and the \code{moondate}
 column formatted as a \code{\link{Date}}.
}
\details{
Sometimes the raw moon data table is not fully up-to-date. Because
 the \code{portalr} functions \code{\link[portalr]{weather}} and 
 \code{\link[portalr]{fcast_ndvi}} point to the raw moons data, that table
 needs to be updated to produce the correct current data table for 
 casting.
}
\examples{
 \donttest{
  create_dir()
  fill_raw()
  prep_moons()
  pth <- file_path(files = "raw/PortalData/Rodents/moon_dates.csv")
  moons <- read.csv(pth, stringsAsFactors = FALSE)
  moons <- add_future_moons(moons)
  format_moons(moons)
 }

}
