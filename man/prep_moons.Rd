% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepare_moons.R
\name{prep_moons}
\alias{prep_moons}
\alias{format_moons}
\alias{add_future_moons}
\alias{add_extra_future_moons}
\alias{add_past_moons_to_raw}
\title{Prepare lunar data for the portalcasting repository}
\usage{
prep_moons(lead_time = 12, cast_date = Sys.Date(),
  raw_path = "PortalData/Rodents/moon_dates.csv", main = ".",
  quiet = FALSE, overwrite = TRUE)

format_moons(moons)

add_future_moons(moons = prep_moons(), lead_time = 12,
  cast_date = Sys.Date())

add_extra_future_moons(moons, cast_date = Sys.Date())

add_past_moons_to_raw(moons, main = ".",
  raw_path = "PortalData/Rodents/moon_dates.csv", overwrite = TRUE)
}
\arguments{
\item{lead_time}{\code{integer} (or integer \code{numeric}) value for the
number of timesteps forward a cast will cover.}

\item{cast_date}{\code{Date} from which future is defined, typically 
today's date (set using \code{\link{Sys.Date}}).}

\item{raw_path}{\code{character} value indicating the file path
to the data within \code{raw}. A standard portalcasting directory 
downloads the raw data files into \code{"raw\PortalData"}, so 
\code{raw_path = "PortalData/Rodents/moon_dates.csv"} (as \code{"raw/"} 
is implied).}

\item{main}{\code{character} value of the name of the main component of
the directory tree.}

\item{quiet}{\code{logical} indicator controlling if messages are printed.}

\item{overwrite}{\code{logical} indicator of whether or not the existing
raw moons file should be updated with the past moons.}

\item{moons}{Moons \code{data.frame}.}
}
\value{
All functions here return some version of a moons \code{data.frame}
 \cr \cr. 
 \code{prep_moons}, \code{format_moons}: fully appended and formatted 
 \code{data.frame}. \cr \cr
 \code{add_past_moons_to_raw}, \code{add_future_moons}, 
 \code{add_extra_future_moons}: appropropriately appended \code{moons} 
 data table as a \code{moons}-class \code{data.frame}.
}
\description{
A set of functions that get time information (calendar dates, 
 census periods, and newmoon numbers) associated with trapping events 
 (achieved and missed) based on a lunar survey schedule. If needed, 
 additional moons will be added to both the in-use and raw versions of 
 the data table. \cr \cr
 \code{add_past_moons_to_raw} appends missing past moon dates to the
 raw data file. (See \code{Details}.) \cr \cr
 \code{add_future_moons} adds future moon dates to the moon table, counting 
 forward from \code{cast_date}. Because the \code{moons} table might not 
 have the most recent moons, more rows than \code{lead_time} may need to 
 be added to the table. \cr \cr. \cr \cr
 \code{add_extra_future_moons} adds more more moons to accomplish required
 data for \code{lead_time}. Because the moon table might not have the most 
 recent moons, more rows than initially requested may need to be added to 
 the table for it to cover \code{lead_time} .\cr \cr
 \code{format_moons} formats the final output table with \code{year} and
 \code{month} columns formatted accordingly, and the \code{newmoondate}
 column formatted as a \code{\link{Date}}.
}
\details{
Sometimes the raw moon data table is not fully up-to-date. Because
  the \code{portalr} functions \code{\link[portalr]{weather}} and 
  \code{\link[portalr]{fcast_ndvi}} point to the raw moons data, that table
  needs to be updated to produce the correct current data table for 
  casting. \code{add_past_moons_to_raw} updates the raw file accordingly 
  \cr \cr
}
\examples{
 \donttest{
  create_dir()
  fill_raw()
  prep_moons()
  fpath <- file_paths(".", "raw/PortalData/Rodents/moon_dates.csv")
  moons <- read.csv(fpath, stringsAsFactors = FALSE)
  moons <- add_future_moons(moons)
  moons <- add_past_moons_to_raw(moons)
  format_moons(moons)
 }

}
