% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/args.R
\name{check_args}
\alias{check_args}
\alias{check_arg}
\alias{check_arg_list}
\title{Check a function's arguments' values for validity}
\usage{
check_args(arg_checks = TRUE)

check_arg(arg_name, arg_value, fun_name = NULL)

check_arg_list()
}
\arguments{
\item{arg_checks}{\code{logical} value of if the arguments should be
checked.}

\item{arg_name}{\code{character} value of the argument name.}

\item{arg_value}{Input value for the argument.}

\item{fun_name}{\code{character} value of the function name or \code{NULL}.}
}
\value{
\code{check_arg}: \code{character} vector of error messages
  associated with the specific situation 
  (\code{<fun_name>(<arg_name> = arg_value)}).
  \code{check_arg_list}: \code{list} of argument checking component 
  \code{list}s.
}
\description{
\code{check_args} checks that all of the arguments to a given
 function have valid values within the pipeline to avoid naming collision
 and improper formatting, by wrapping around \code{check_arg} for each
 argument. \cr \cr
 \code{check_arg} returns \code{NULL} if the argument is valid or 
 \code{character} vector of error messages associated 
 with the specific situation (\code{<fun_name>(<arg_name> = arg_value)})
 if the argument is invalid. \cr \cr
 \code{check_arg_list_maker} produces a list of argument details for 
 checking within \code{check_arg}. \cr  \cr 
 \strong{\code{check_args} should only be called within a function.}
 \cr \cr
 See \code{Details} for argument-specific rules.
}
\details{
Argument details used for checking are produced simply via
 \code{check_arg_list_maker}. If you are adding to the codebase and use
 novel arguments, add them to that function's production. \cr
 Each argument should have its own element that is a list with the 
 following elements: \code{class} (\code{character} value of its class), 
 \code{null} (\code{logical} indicator if the argument can be \code{NULL}),
 \code{na} (\code{logical} indicator if the argument can be \code{NA}),
 \code{length} (\code{numeric} value of how many elements the argument can
 be or \code{NULL} if unrestricted), and \code{addl} if needed (an
 unevaluated \code{expression} that can be evaluated and allows for 
 simple evaluation of, e.g., element names of a \code{list}; see the 
 source code). \cr 

 Usage rules for arguments are as follows: \cr

 Must be length-1 \code{logical} values, can be \code{NULL}, but cannot be 
 \code{NA}: 
  \code{add_error},
  \code{add_in_window}, 
  \code{add_lead}, 
  \code{add_obs}, 
  \code{append_cast_csv}, 
  \code{cast_covariates}, 
  \code{cleanup},
  \code{covariatesTF}, 
  \code{ensemble}, 
  \code{hist_covariates}, 
  \code{movedTF}, 
  \code{nadot}, 
  \code{NULLname},
  \code{overwrite}, 
  \code{quiet}, 
  \code{retain_target_moons},
  \code{save}, 
  \code{tail}, 
  \code{total}, 
  \code{verbose},
  \code{with_census}. 

 Must be length-1 \code{character} values, can be \code{NULL}, but cannot 
 be \code{NA}:
  \code{cast_type} (if not \code{NULL}, can only be of value 
   \code{"forecast"}, \code{"forecasts"}, \code{"hindcast"}, 
   or\code{"hindcasts"}), \code{colname}, \code{data_name}, 
  \code{extension} (if not \code{NULL}, must have a \code{"."} character),
  \code{filename}, 
  \code{filename_cov}, 
  \code{filename_meta},
  \code{filename_moons}, 
  \code{freq}  (ADDL), 
  \code{main}, 
  \code{level}, 
  \code{model} (inputted values are checked via 
   \code{\link{verify_models}}), 
  \code{name}, 
  \code{output} (if not \code{NULL}, must be \code{"abundances"}),
  \code{plots} (if not \code{NULL}, must be \code{"all"} or 
   \code{"longterm"}),
  \code{raw_cov_cast_file}, 
  \code{raw_moons_file}, 
  \code{raw_path_archive}, 
  \code{raw_path_cov_cast}, 
  \code{raw_path_data}, 
  \code{raw_path_predictions}, 
  \code{raw_traps_file}, 
  \code{sep_char}, 
  \code{set},
  \code{source_name},
  \code{source_url}, 
  \code{species_id} (if not \code{NULL}, must be within the species
   produced by \code{rodent_spp("wtotal")}),
  \code{specific_sub}, 
  \code{subs_type} (if not \code{NULL}, must be \code{"prefab"}),
  \code{type}, 
  \code{url}, 
  \code{winner} (if not \code{NULL}, must be \code{"hist"} or 
   \code{"cast"}), 
  \code{zip_destin}.

 Must be \code{character} values, can be any length, can be \code{NULL}, 
 but cannot be \code{NA}:
  \code{concept_rec_id}, 
  \code{data}, 
  \code{dir_level},
  \code{enquote_args}, 
  \code{eval_args}, 
  \code{files}, 
  \code{local_paths},
  \code{models} (inputted values are checked via 
   \code{\link{verify_models}}), 
  \code{msg}, 
  \code{names},
  \code{path}, 
  \code{rec_id}, 
  \code{rec_version}, 
  \code{ref_species},
  \code{species} (if not \code{NULL}, must be all within the species
   produced by \code{rodent_spp("wtotal")}),
  \code{specific_subs}, 
  \code{subs}, 
  \code{subs_names},
  \code{target_cols}, 
  \code{tmnt_type} (if not \code{NULL}, must be \code{"all"} or 
   \code{"controls"}), 
  \code{treatment} (if not \code{NULL}, must be \code{"control"})

 Must be \code{data.frame}s, can be any length, can be \code{NULL}, 
 but cannot be \code{NA}:
  \code{all_casts}, 
  \code{cast} (must also conform to checks via \code{\link{verify_cast}}), 
  \code{cast_coc}, 
  \code{cast_tab}, 
  \code{cast_to_check}, 
  \code{casts}, 
  \code{covariates}, 
  \code{df}, 
  \code{hist_cov}, 
  \code{hist_tab}, 
  \code{moons}, 
  \code{rodents_tab}.

 Must be a \code{data.frame} or \code{vector} can be any length, can be 
 \code{NULL}, but cannot be \code{NA}:
  \code{dfv}.

 Must be a \code{data.frame} or \code{list} can be any length, can be 
 \code{NULL}, but cannot be \code{NA}:
  \code{dfl}.

 Must be \code{list}s, can be any length, can be \code{NULL}, but cannot 
 be \code{NA}:
  \code{control},
  \code{control_cdl},
  \code{controls_m},
  \code{controls_r},
  \code{downloads},
  \code{rodents}.

 Must be length-2 \code{list}s with elements named \code{"forecast"} 
 and \code{"aic"}., can be \code{NULL}, but 
 cannot be \code{NA}:
  \code{all},
  \code{controls}.

 Must be length-1 \code{Date}-conformable values, can be \code{NULL}, 
 but cannot be \code{NA}:
  \code{cast_date},
  \code{end},
  \code{from_date},
  \code{start}.

 Must be \code{Date}-conformable values, can be any length, can be
 \code{NULL}, but cannot be \code{NA}:
  \code{cast_dates}.
  \code{dates}.

 Must be length-1 \code{numeric} values, can be \code{NULL}, but
 cannot be \code{NA}:
  \code{confidence_level} (must be between 0 and 1), 
  \code{lat},
  \code{lon}.

 Must be length-1 \code{integer}-conformable values can be \code{NULL},
 but cannot be \code{NA}:
  \code{end_moon} (must be positive),
  \code{lead} (must be positive),
  \code{lead_time} (must be non-negative),
  \code{lev},
  \code{min_observed} (must be positive),
  \code{min_plots} (must be positive),
  \code{min_traps} (must be positive),
  \code{ndates} (must be positive),
  \code{newmoonnumber} (must be positive),
  \code{nmoons} (must be non-negative),
  \code{start_moon} (must be positive),
  \code{topx} (must be non-negative).

 Must be length-1 \code{integer}-conformable values can be \code{NULL}, 
 and can be \code{NA}:
  \code{lag} (must be positive),
  \code{min_lag} (must be non-negative).

 Must be length-2 \code{integer}-conformable values can be \code{NULL}, 
 but cannot be \code{NA}:
  \code{rangex} (must be positive).

 Must be \code{integer}-conformable values, can be any length, can be 
 \code{NULL}, but cannot be \code{NA}:
  \code{end_moons} (must be positive),
  \code{target_moons} (must be positive).
}
\examples{
 check_arg_list()

}
