% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/messaging.R
\name{portalcast_messages}
\alias{portalcast_messages}
\alias{version_message}
\alias{portalcast_welcome}
\alias{portalcast_goodbye}
\alias{sandbox_welcome}
\alias{creation_message}
\alias{setup_completion_message}
\alias{data_readying_message}
\alias{data_resetting_message}
\alias{models_running_message}
\alias{model_running_message}
\alias{model_done_message}
\alias{fill_casts_message}
\alias{fill_fits_message}
\title{Specific message functions}
\usage{
version_message(quiet = FALSE)

portalcast_welcome(quiet = FALSE)

portalcast_goodbye(quiet = FALSE)

sandbox_welcome(main = ".", quiet = FALSE)

creation_message(main = ".", quiet = FALSE)

setup_completion_message(quiet = FALSE)

data_readying_message(end_moon = NULL, quiet = FALSE)

data_resetting_message(quiet = FALSE)

models_running_message(end_moon = NULL, quiet = FALSE)

model_running_message(model = NULL, quiet = FALSE)

model_done_message(model = NULL, run_status = NULL, quiet = FALSE)

fill_casts_message(
  files = NULL,
  movedTF = NULL,
  quiet = FALSE,
  verbose = FALSE
)

fill_fits_message(files = NULL, movedTF = NULL, quiet = FALSE, verbose = FALSE)
}
\arguments{
\item{quiet}{\code{logical} indicator if message should be quieted.}

\item{main}{\code{character} value of the name of the main component of
the directory tree.}

\item{end_moon}{\code{integer} (or integer \code{numeric}) 
newmoon number of the last sample(s) to be included.}

\item{model}{\code{character} value of the model name or model script path.
Will be stripped of all excess path components and the extension to
give just the name of the model itself.}

\item{run_status}{Output from the \code{\link{source}}-ing of a model
script; a \code{list} if successful or \code{NA} if not.}

\item{files}{\code{character} vector of the base file names of the files
that may or may not have been moved.}

\item{movedTF}{\code{logical} vector indicating if each of the files in 
\code{files} has been moved or not.}

\item{verbose}{\code{logical} indicator of whether or not to print out
all of the files and whether they were moved or not.}
}
\value{
Message is put to the console; \code{NULL} is returned.
}
\description{
Messaging functions:
 \code{version_message} creates a message for the local package  
  version. \cr \cr
 \code{portalcast_welcome} generates a welcome message for a
  portalcast run. \cr \cr
 \code{portalcast_goodbye} makes a goodbye message for when models are 
  done. \cr \cr
 \code{sandbox_welcome} generates a special welcome message for sandboxes,
  displayed upon completion of \code{\link{setup_sandbox}}. \cr \cr
 \code{creation_message} makes a message about the creation of the
  directory. \cr \cr
 \code{setup_completion_message} creates a message for when the directory
  setting up has successfully finished. \cr \cr
 \code{fill_casts_message} creates the final message to be used in 
  \code{\link{fill_casts}} that relays the number, and optionally the
  specific names, of the files moved.
 \code{fill_fits_message} creates the final message to be used in 
  \code{\link{fill_fits}} that relays the number, and optionally the
  specific names, of the files moved.
}
\examples{
 portalcast_welcome()
 portalcast_goodbye()
 sandbox_welcome()
 creation_message()
 setup_completion_message()
 data_readying_message(end_moon = 400)
 data_resetting_message()
 models_running_message(end_moon = 400)
 model_running_message("ESSS")
 model_done_message("ESSS", list("output"))
 model_done_message("ESSS", NA)
 fill_casts_message("xx.csv", TRUE)
 fill_casts_message(c("xx.csv", "yy.R"), c(TRUE, FALSE), 
                          verbose = TRUE)
 fill_fits_message("xx.csv", TRUE)

}
