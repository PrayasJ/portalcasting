% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_casts.R
\name{make_ensemble}
\alias{make_ensemble}
\title{Create the ensemble model from all other forecasts}
\usage{
make_ensemble(all_casts, main = ".", confidence_level = 0.9)
}
\arguments{
\item{all_casts}{\code{data.frame} of all of the forecasts to be 
combined.}

\item{main}{\code{character} value of the name of the main component of
the directory tree.}

\item{confidence_level}{\code{numeric} confidence level used in 
summarizing model output. Must be between \code{0} and \code{1}.}
}
\value{
Forecast abundance table for the ensemble model.
}
\description{
Combine the fitted models to make an ensemble prediction.
}
\details{
Uses the weighted mean and weighted sample variance to combine
  the models. The mean is the weighted mean of all model means and the
  variance is the weighted mean of all model variances + the variances of 
  the weighted mean using the unbiased estimate of sample variance. See
  https://github.com/weecology/portalPredictions/pull/65
  We only store the prediction interval for models, so we backcalculate 
  individual model variance assuming the same \code{confidence_level} 
  throughout. Assert that the summed weight of all the model ensembles is 
  1, as that's what the variance estimates assume. The weight values are 
  rounded to account for precision errors. Summed weights can also be 
  \code{NA} if there are not weights available for that ensemble.
}
\examples{
 \donttest{
  setup_dir()
  temp_dir <- sub_paths(specific_subs = "tmp")
  pred_dir <- sub_paths(specific_subs = "predictions")
  filename_suffix <- "hindcast"
  file_ptn <- paste(filename_suffix, ".csv", sep = "")
  files <- list.files(temp_dir, pattern = file_ptn, full.names = TRUE)
  cclass <- c("Date", "integer", "integer", "integer", "character", 
              "character", "character", "character", "numeric",
              "numeric", "numeric", "integer", "integer", "integer")
  all_casts <- do.call(rbind, 
          lapply(files, read.csv, na.strings = "", colClasses  = cclass))
  make_ensemble(all_casts = all_casts) 
 }
  
}
