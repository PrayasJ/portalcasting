% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepare_models.R
\name{model_script_controls}
\alias{model_script_controls}
\title{Produce the control lists for the model script writing}
\usage{
model_script_controls(models = NULL, controls_m = NULL)
}
\arguments{
\item{models}{\code{character} vector of name(s) of model(s) whose 
script-writing controls need to be included in the \code{list} used
to write the scripts.}

\item{controls_m}{Additional controls for models not in the prefab set. 
\cr 
A \code{list} of a single model's script-writing controls or a
\code{list} of \code{list}s, each of which is a single model's 
script-writing controls. \cr 
Presently, each model's script writing controls
should include three elements: \code{name} (a \code{character} value of 
the model name), \code{covariates} (a \code{logical} indicator of if the 
model needs covariates), and \code{lag} (an \code{integer}-conformable 
value of the lag to use with the covariates or \code{NA} if 
\code{covariates = FALSE}). \cr 
If only a single model is added, the name of 
the model from the element \code{name} will be used to name the model's
\code{list} in the larger \code{list}. If multiple models are added, each
element \code{list} must be named according to the model and the
\code{name} element. \cr 
See \code{Details} and \code{Examples}.}
}
\value{
Named \code{list} of length equal to the number of elements in
 \code{models} and with elements that are each \code{list}s of those
 \code{models}'s script-writing controls.
}
\description{
The model scripts are written using a generalized function
 that takes a few arguments that vary among models, and so this function
 produces the appropriate \code{list} of \code{list}s of model
 script-writing control arguments. The specific \code{models} must be
 input by the user, with the default being \code{NULL}, which returns.
 \code{NULL}. The prefab models (\code{\link{prefab_models}}) have their
 control lists included already, but any user-created model needs to
 have controls provided. See \code{Details}. \cr \cr
 \strong{Users adding models to the prefab set should add their
 script-writing controls lists to the \code{prefab_controls} object in 
 the source code of the function.}
}
\details{
Any model that is part of the \code{prefab} set 
 (\code{c("AutoArima", "ESSS", "nbGARCH", "nbsGARCH", "pevGARCH")})
 has its script-writing controls already included internally. Users only
 need to include controls for non-prefab \code{models}. \cr \cr
 Any user-defined \code{models} that are not included in \code{controls}
 will throw an error. \cr \cr 
 If any user-defined \code{controls} duplicate any existing controls for
 the prefab models or if \code{controls} contains any duplicate named
 elements, an error will be thrown.
}
\examples{
 model_script_controls(prefab_models())
 controls <- list(name = "xx", covariates = FALSE, lag = NA)
 model_script_controls("xx", controls)
 model_script_controls(model_names("xx", "prefab"), controls)
 model_script_controls(c("xx", "ESSS"), controls)

}
