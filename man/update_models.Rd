% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepare_models.R
\name{update_models}
\alias{update_models}
\title{Update models based on user input controls}
\usage{
update_models(
  main = ".",
  models = NULL,
  update_prefab_models = FALSE,
  control_files = files_control(),
  quiet = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{main}{\code{character} value of the name of the main component of
the directory tree.}

\item{models}{\code{character} vector of name(s) of model(s) to update.}

\item{update_prefab_models}{\code{logical} indicator if all of the models'
scripts should be updated, even if they do not have an explicit change
to their model options via \code{controls_model}. Default is
\code{FALSE}, which leads to only the models in \code{controls_model}
having their scripts re-written. Switching to \code{TRUE} results in the
models listed in \code{models} having their scripts re-written. \cr \cr
This is particularly helpful when one is changing the global (with respect
to the models) options \code{main}, \code{quiet}, \code{verbose}, or
\code{control_files}.}

\item{control_files}{\code{list} of names of the folders and files within
the sub directories and saving strategies (save, overwrite, append, etc.).
Generally shouldn't need to be edited. See \code{\link{files_control}}.}

\item{quiet}{\code{logical} indicator if progress messages should be
quieted.}

\item{verbose}{\code{logical} indicator of whether or not to print out
all of the information or not (and thus just the tidy messages).}
}
\value{
\code{NULL}.
}
\description{
Update model scripts based on the user-defined model control
 inputs. This allows users to define their own models or re-define prefab
 models within the \code{\link{portalcast}} pipeline.
}
\examples{
 \donttest{
  setup_dir()
  cm <- model_control(name = "AutoArima", data_sets = "all")
  update_models(controls_model = cm)
 }

}
