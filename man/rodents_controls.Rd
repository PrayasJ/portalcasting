% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepare_rodents.R
\name{rodents_controls}
\alias{rodents_controls}
\title{Create control lists for generating rodents data tables}
\usage{
rodents_controls(tmnt_types = NULL, controls_r = NULL,
  arg_checks = TRUE)
}
\arguments{
\item{tmnt_types}{\code{character} value(s) of the treatment 
type(s) (currently \code{"all"} or \code{"controls"}) used to enforce 
certain arguments.}

\item{controls_r}{Additional controls for datasets not in the standard set. 
\cr 
A \code{list} of a single dataset's controls or a \code{list} of 
\code{list}s, each of which is a single dataset's controls. \cr 
Presently, each dataset's controls should include 10 elements: 
\itemize{
 \item \code{tmnt_type}: \code{character} value of the name,
 \item \code{species}: \code{character}-valued vector of species names 
 to include.  
 \item \code{total}: \code{logical} value indicating if a total 
 (sum across species) should be added or not. Only available if more than 
 one species is included. 
 \item \code{level}: \code{character} indicating the type of summary:
  \code{"Plot"}, \code{"Treatment"}, or \code{"Site"}. Pipes 
  directly to \code{\link[portalr]{summarize_rodent_data}}.
 \item \code{treatment}: \code{character} indicating the specific 
  treatment(s) to trim to if \code{level = "Treatment"}: \code{"control"},
  \code{"exclosure"}, \code{"removal"}, or \code{"spectabs"} 
 \item \code{output}: \code{character} indicating the type of data:
  \code{"abundance"}, \code{"biomass"}, or \code{"energy"}. Pipes 
  directly to \code{\link[portalr]{summarize_rodent_data}}.
 \item \code{min_traps}: \code{integer} (or integer \code{numeric}) of the 
  minimum number of traps collected for a plot to be used. Pipes directly
  to \code{\link[portalr]{summarize_rodent_data}}.
 \item \code{min_plots}: \code{integer} (or integer \code{numeric}) of the 
  minimum number of plots surveyed for a survey to be used. Pipes 
  directly to \code{\link[portalr]{summarize_rodent_data}}.
 \item \code{plots}: Specification of subset of plots. Can be a vector of 
  \code{numeric} plots indicators or specific sets indicated by
  \code{character} values: \code{"all"} plots or \code{"Longterm"} plots
  (plots that have had the same treatment for the entire time series).
 \item \code{filename}: \code{character} name of the file for saving the 
  output.
}
If only a single dataset is added, the name of the set from the element
\code{tmnt_type} will be used to name the model's \code{list} in the 
larger \code{list}. If multiple models are added, each element \code{list} 
must be named according to the dataset and the \code{tmnt_type} element.
\cr 
See \code{Details} and \code{Examples}.}

\item{arg_checks}{\code{logical} value of if the arguments should be
checked using standard protocols via \code{\link{check_args}}. The 
default (\code{arg_checks = TRUE}) ensures that all inputs are 
formatted correctly and provides directed error messages if not. \cr
However, in sandboxing, it is often desirable to be able to deviate from 
strict argument expectations. Setting \code{arg_checks = FALSE} triggers
many/most/all enclosed functions to not check any arguments using 
\code{\link{check_args}}, and as such, \emph{caveat emptor}.}
}
\value{
Named \code{list} of length equal to the number of elements in 
 \code{tmnt_types} and with elements that are each 
 \code{list}s of those \code{tmnt_type}'s data-generating controls, for
 input as \code{controls_r} in \code{\link{prep_rodents}}.
}
\description{
Given the number of arguments into 
 \code{\link{prep_rodents_table}}, it helps to have a control \code{list}  
 to organize them. This function produce those \code{list}s for
 standard datasets ("all" and "controls") or user-defined sets.
}
\examples{
 rodents_controls(c("all", "controls"))
 all_PPonly <- list(tmnt_type = "all_PPonly", species = "PP", 
                    total = FALSE, filename = "rodents_all_PPonly.csv", 
                    level = "Site", treatment = NULL, plots = "all", 
                    min_plots = 24, min_traps = 1, output = "abundance")
 rodents_controls("all_PPonly", all_PPonly, arg_checks = FALSE)
 rodents_controls(c("all", "all_PPonly"), all_PPonly, arg_checks = FALSE)

}
